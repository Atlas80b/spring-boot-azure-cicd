name: Build and deploy JAR app to Azure Web App with private endpoint

on:
  push:
    branches:
      - dev #switch with main branch


env:
  WEBAPP: 'dummy-app'
  GROUP: 'dummy-resource-group'
  ACCOUNT: 'dummyapp'
  CONTAINER: 'dummy-app-jar-deployment'
  EXPIRY_TIME: 5 minutes

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: '${{ github.workspace }}/target/*.jar'

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: app
          path: app

      - name: Zip the app contents
        uses: papeloto/action-zip@v1
        with:
          files: app
          dest: app.zip

      - name: Set SAS token expiration
        run: echo "expiry=`date -u -d "$EXPIRY_TIME" '+%Y-%m-%dT%H:%MZ'`" >> $GITHUB_ENV

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az extension add --name webapp

            az storage account create   -n $ACCOUNT   -g $GROUP -l westus
            az storage container create -n $CONTAINER --account-name $ACCOUNT --auth-mode login
            
            ZIP_URL=$(az storage blob generate-sas --full-uri --permissions drw --expiry ${{ env.expiry }} --account-name $ACCOUNT -c $CONTAINER -n $ACCOUNT | xargs)
           
            echo "first URL"
            echo $URL
            
            az storage blob upload -f app.zip --blob-url $ZIP_URL
            az webapp deploy --name $WEBAPP --resource-group $GROUP --type zip --src-url $ZIP_URL --async false

            az storage container delete -n $CONTAINER --account-name $ACCOUNT